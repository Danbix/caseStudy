version: '3.8'

services:
  # -------------------
  # Jenkins Server
  # -------------------
  jenkins:
    image: jenkins/jenkins:lts
#    container_name: jenkins
    user: root
    ports:
      - "8090:8080"
      - "50000:50000"
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
      - maven_repo:/var/jenkins_home/.m2/repository
    networks:
      - spring-net

  # -------------------
  # SonarQube Server
  # -------------------
  
  sonarqube:
    image: sonarqube:community
    ports:
      - "9000:9000"
    networks:
      - spring-net
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs

  # -------------------
  # MySQL Database
  # -------------------
  mysql-db:
    image: mysql:8.0
    container_name: mysql-db
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: my_db
      MYSQL_USER: my_user
      MYSQL_PASSWORD: my_pass
    ports:
      - "3306:3306"
    networks:
      - spring-net

  # -------------------
  # WebClient-Service
  # -------------------
  webclient-service:
    build:
      context: ./web
      dockerfile: Dockerfile
    container_name: webclient-service
    ports:
      - "8083:8083"
    depends_on:
      - mysql-db
    networks:
      - spring-net
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-db:3306/my_db
      SPRING_DATASOURCE_USERNAME: my_user
      SPRING_DATASOURCE_PASSWORD: my_pass

  # -------------------
  # Rest-Service
  # -------------------
  rest-service:
    build:
      context: ./rest
      dockerfile: Dockerfile
    container_name: rest-service
    ports:
      - "8081:8081"
    depends_on:
      - mysql-db
    networks:
      - spring-net
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-db:3306/my_db
      SPRING_DATASOURCE_USERNAME: my_user
      SPRING_DATASOURCE_PASSWORD: my_pass

  # -------------------
  # Feign-Service
  # -------------------
  feign-service:
    build:
      context: ./feign
      dockerfile: Dockerfile
    container_name: feign-service
    ports:
      - "8082:8082"
    depends_on:
      - mysql-db
    networks:
      - spring-net
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-db:3306/my_db
      SPRING_DATASOURCE_USERNAME: my_user
      SPRING_DATASOURCE_PASSWORD: my_pass

  # -------------------
  # Voiture-Service
  # -------------------
  voiture-service:
    build:
      context: ./voiture-service
      dockerfile: Dockerfile
    container_name: voiture-service
    ports:
      - "9001:9001"
    depends_on:
      - mysql-db
    networks:
      - spring-net
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-db:3306/my_db
      SPRING_DATASOURCE_USERNAME: my_user
      SPRING_DATASOURCE_PASSWORD: my_pass

volumes:
  jenkins_home:
  maven_repo:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:

networks:
  spring-net:
    driver: bridge
